MODULE Main 0 0
IMPORT Lib 0
ENDHDR

PROC MAIN 0 0 0
!   print sumpow(5, 4); newline
CONST 4
CONST 5
LOCAL 0
GLOBAL sumpow_1
PCALLW 2
CONST 0
GLOBAL lib.print
PCALL 1
CONST 0
GLOBAL lib.newline
PCALL 0
RETURN
END

PROC sumpow_1 8 0 0
CONST 0
LOCAL 0
CONST -4
OFFSET
STOREW
CONST 0
LOCAL 0
CONST -8
OFFSET
STOREW
JUMP L2
LABEL L1
!     m := m + 1; 
LOCAL 0
CONST -4
OFFSET
LOADW
CONST 1
PLUS
LOCAL 0
CONST -4
OFFSET
STOREW
!     s := s + pow(m)
LOCAL 0
CONST -8
OFFSET
LOADW
LOCAL 0
CONST -4
OFFSET
LOADW
LOCAL 0
GLOBAL pow_2
PCALLW 1
PLUS
LOCAL 0
CONST -8
OFFSET
STOREW
LABEL L2
!   while m < n do 
LOCAL 0
CONST -4
OFFSET
LOADW
LOCAL 0
CONST 16
OFFSET
LOADW
JLT L1
JUMP L3
LABEL L3
!   return s
LOCAL 0
CONST -8
OFFSET
LOADW
RETURNW
ERROR E_RETURN 0
END

PROC pow_2 8 0 0
CONST 0
LOCAL 0
CONST -4
OFFSET
STOREW
CONST 1
LOCAL 0
CONST -8
OFFSET
STOREW
JUMP L5
LABEL L4
!       j := j+1; q := q*p
LOCAL 0
CONST -4
OFFSET
LOADW
CONST 1
PLUS
LOCAL 0
CONST -4
OFFSET
STOREW
LOCAL 0
CONST -8
OFFSET
LOADW
LOCAL 0
CONST 16
OFFSET
LOADW
TIMES
LOCAL 0
CONST -8
OFFSET
STOREW
LABEL L5
!     while j < k do 
LOCAL 0
CONST -4
OFFSET
LOADW
LOCAL 0
CONST 12
OFFSET
LOADW
CONST 20
OFFSET
LOADW
JLT L4
JUMP L6
LABEL L6
!     return q
LOCAL 0
CONST -8
OFFSET
LOADW
RETURNW
ERROR E_RETURN 0
END

